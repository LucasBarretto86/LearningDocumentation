MODULO 01

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Ambiente de desenvolvimento;

A três possibilidades para criação do ambiente de desenvolvimento, são: Local, Web e Virtualizada.

	Local; 
		Quando o ruby e seus frameworks são instalados localmente, direto na máquina.

	Web; 
		Quando o ambiente de desenvolvimento está em nuvem, ou seja, os arquivos e as configurações do ambiente estão completamente em uma nuvem, o que normalmente é pago.

	Virtualizada;
		Quando é utilizada uma maquina virtual para a criação do ambiente, essa maquina virtual pode ser facilmente ser implementada em outras máquinas, com o uso de programas especificos (VirtualBox e Vagrant);


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Instalação do ambiente virtualizado:

Primeiramente é necessário instalar o Virtualbox, normal, sem a necessidade de nenhuma configuração;

Depois é necessária a instalação do Vagrant, também simples sem a necessidade de nenuma configuração;

Após a instalação, é necessário que seja instalado plugin para o serviço de guest do VB, para essa instalação utilizamos o comando:
vagrant plugin install vagrant-vbguest.

Após a conclusão bastar inicializar a maquina virtual, dentro do pasta em que temos o arquivo vangratfile, com o comando: 
vagrant up

ATENÇÃO: Você precisa possuir um arquivo vagrantfile com as configurações do ambiente que foi virtualizado.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Vagrant CMDS

vagrant up				para subir a maquina virtual
vagrant suspend			para pausar a vm
vagrant halt			para finalizar a vm

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Gem CMDS

gem install rails 					// Instala uma gem

gem install rails -v 5.2.0 			// Força instalação de uma versão especifica

bundle install || bundle 			// Atualizar as gems presentes no projeto

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Rails CMDS

rails new nome_do_projeto			 	// Cria um projeto simples

rails server  || rails s 				// Inicializa o servidor PUMA - PUMA  é um servidor que j vem dentro do ruby, ao inves de ser necessária a instalação de um lamp ou um wamp 
		 	

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
RVM CMDS - RVM é um gerenciador de versões do ruby.

rvm list known						// Listar todas as versões de ruby no repositporio.
	
rvm get head						// Atualiza a Lista de versões disponiveis no repositorio.	
					
rvm Listar 							// Lista as versões instaladas localmente.
							
rvm install x.x.x					// Instala uma versão escolhida.

rvm install x.x.x --default			// Instala uma versão escolhida e setta como padrão.		

rvm use x.x.x						// Permite o uso de diferentes versões instaladas.			

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++

MODULO 02 - Rúby Básico

RUBY

AULA 01 = Maneiras de executar o código Ruby

------------------------------------------------------------------------
Execução padrão, interpretação de arquivo .rb

	A linguagem ruby é uma linguagem interpretada e não compilada, o interpretador de ruby é chamado MRI

	Para executar um arquivo ruby, nós navegamos até o diretório em que está o arquivo e usamos o comando ruby para rodar o interpretador:
		
		ruby nome_do_arquivo.rb

------------------------------------------------------------------------
Execução interativa via prompt(shell)

	O Ruby também possui uma funcionalidade chamada IRB (Interactive Ruby Shell) que é um REPL (Read-Eval-Print Loop), ou seja, assim como outras linguagens essa funcionalidade permite que linhas de comando em Ruby sejam executadas sem que haja a necessidade de se gerar um arquivo rb, ou seja, diretamente no terminal é possível escrever e rodas linhas de script ruby, principalmente usada para testes.

	Para usar o irb basta digitarmos diretamente no prompt as linhas de comando, para inicializar o irb, pasta digirar 'irb' e pressionar, sem seguida basta digitar o script.

------------------------------------------------------------------------
Execução via PRY (Uma Evoulçao do IRB)

	O Pry é uma ferramenta que é tida como a evolução do IRB, pois, além de permitir a interpretação imediata de script via linhas de comando ele também, possui outras funcionalidades como a identação e acoloração do script digitado.

	O Pry é uma gema, ou seja, para utilizar o Pry é necessário instalar a gem.

		gem install pry

	Após a execução basta executar o comando pry ao inves do irb, no entanto é possível configurar para que ao digitar irb o sistema automaticamente execute o pry, para isso é necessária a criação de um arquivo de configuração irbrc


	# Comando para criação:
	# Executar na home do usuário
		touch ~/.irbrc 

	# Dentro do arquivo .irbc
		require 'rubygems'
		require 'pry'
		Pry.start
		exit

	Dentro do ambiente que estamos usando nestas aulas, não conseguimos navegar dentro dos diretorios, pois, nosso enviroment está virtualizado, neste caso para inserir os dados dentro do arquivo que criamos, precisamos usar o vim.

	Em um aba do terminal digite:

	vim  ~/,irbrc // para que o vim abra o arquivo que criamos no home (~)

	o vim irá abrir o arquivo em branco:

	~
	~
	~
	~
	~

	Para inserir dados pressione i, e pressione enter, então voce irá começar a inserir dados no arquivo, 

	após preencher os dados, pressione a tecla 'esc' e digite
	':wq'
	# ':' para inserir um comando do vim;
	# 'w' para salvar os dados preenchidos
	# 'q' para sair do vim

	Após a execução deste processo quando digitarmos irb, automatica o ruby irá executar o pry, ao inves do irb padrão. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

SQLite 3 Bundler Error - Ubuntu

sudo apt-get install sqlite3 libsqlite3-dev
sudo gem install sqlite3-ruby


