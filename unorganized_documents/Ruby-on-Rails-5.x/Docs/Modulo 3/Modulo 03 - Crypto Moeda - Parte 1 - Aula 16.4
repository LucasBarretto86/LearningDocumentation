
MODULO 03 - Crypto Waller - Parte 1

AULA 16.4 - Rails Console - Trabalhando com Models: .new

-----------------------------------------------------------------
O console também permite que possamos trabalhar com as classes e suas instancias e não necessáriamente com elementos ou objetos que já estão presentes no banco.

É possível instanciar novos objetos diretamente do console.

	EXEMPLO:
		irb(main):007:0> c = Coin.new
		=> #<Coin id: nil, name: nil, acronym: nil, url_image: nil, created_at: nil, updated_at: nil>

E podemos trabalhar com esse objeto dentro do próprio console.

	EXEMPLO:
		irb(main):008:0> c.name = "Dash"
		=> "Dash"
		irb(main):009:0> c.acronym = "DSH"
		=> "DSH"
		irb(main):010:0> c.url_image = "https://i.ibb.co/L0jCtjD/dsh.png"
		=> "https://i.ibb.co/L0jCtjD/dsh.png"

E assim podemos então salva-lo no nosso banco:

	EXEMPLO:
		irb(main):011:0> c.save!
		   (0.2ms)  begin transaction
		  Coin Create (2.4ms)  INSERT INTO "coins" ("name", "acronym", "url_image", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)  [["name", "Dash"], ["acronym", "DSH"], ["url_image", "https://i.ibb.co/L0jCtjD/dsh.png"], ["created_at", "2019-06-21 15:43:29.247604"], ["updated_at", "2019-06-21 15:43:29.247604"]]
		   (5.3ms)  commit transaction
		=> true	

Observe que embora esteja trabalhando com o console todas as ações efetuadas podem ser gravadas diretamente na aplicação, tornando as alterações feitas em console reais, 
	Exemplo:
	irb(main):015:0> Coin.last
	  Coin Load (0.6ms)  SELECT  "coins".* FROM "coins" ORDER BY "coins"."id" DESC LIMIT ?  [["LIMIT", 1]]
	=> #<Coin id: 3, name: "Dash", acronym: "DSH", url_image: "https://i.ibb.co/L0jCtjD/dsh.png", created_at: "2019-06-21 15:43:29", updated_at: "2019-06-21 15:43:29">
	irb(main):016:0> 


OBS:
	Lembre-se, caso as modificações não devam ser permanentes use a flag --sandbox no momento de inicializar o console:
		rails c --sandbox








