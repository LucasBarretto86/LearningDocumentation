
MODULO 03 - Crypto Waller - Parte 1

AULA 18.2 - Query Params para Requests - Params[chave]

-----------------------------------------------------------------
Query params são valor enviados/recebidos juntamente com a request HTTP, para fornecer dados via url utilizamos junto ao endpoint o char de ? seguido de um par chave=valor.

	EXEMPLO: exemplo.com.br/?name=lucas

O que o Rails faz neste caso é criar uma Hash com os dados recebido direcionando estes dados ao controller envolvido no processo. 

	Com o envio do dado conforme o exemplo acima observe o seguinte comportamento no servidor:

		Started GET "/?nome=lucas" for 127.0.0.1 at 2019-06-21 19:15:58 -0300
		Processing by WelcomeController#index as HTML
		  Parameters: {"name"=>"lucas"}
		  Rendering welcome/index.html.erb within layouts/application
		  Rendered welcome/index.html.erb within layouts/application (26.6ms)
		Completed 200 OK in 53ms (Views: 51.5ms | ActiveRecord: 0.0ms)

Isso significa dizer que o dado enviado pela url de forma explicita significa uma request do tipo GET que enviou os query params nome=lucas e apartir desses dados o Rails criou uma hash {"name"=>"lucas"} atribuido ao controller WelcomeController


Para usarmos o valor recebido, precisamos apenas utilizar uma variavel global presente no Ruby chamada params:

	EXEMPLO:
		class WelcomeController < ApplicationController
	  		def index
	    		@name = params[:nome]
	  		end
		end 

Logo, quando na nossa view chamarmos a variavel de instancia @name, o retorno será igual ao valor recebido pela request http.

Obs: Para fornecer  mais parametros usamos em nossa request o & comercial:
	EXEMPLO: exemplo.com.br/?name=Lucas&cargo=Estágiario

		Started GET "/?nome=Lucas&cargo=Est%C3%A1giario" for 127.0.0.1 at 2019-06-21 19:37:24 -0300
		Processing by WelcomeController#index as HTML
		  Parameters: {"nome"=>"Lucas", "cargo"=>"Estágiario"}
		  Rendering welcome/index.html.erb within layouts/application
		  Rendered welcome/index.html.erb within layouts/application (1.2ms)
		Completed 200 OK in 30ms (Views: 29.3ms | ActiveRecord: 0.0ms)


